<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <groupId>com.cffex.wukong</groupId>
    <artifactId>cap</artifactId>
    <packaging>pom</packaging>
    <version>V1.05</version>

    <modules>
        <module>cap-core</module>
        <module>cap-web</module>
        <module>cap-remote</module>
        <module>cap-registry</module>
        <module>cap-common</module>
    </modules>

    <properties>
        <!--sonar-->
        <sonar.jacoco.itReportPath>${project.basedir}/../target/jacoco-it.exec</sonar.jacoco.itReportPath>
        <sonar.language>java</sonar.language>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Compile 3rd party dependencies: -->
        <jdk.version>1.8</jdk.version>
        <spring.version>4.1.1.RELEASE</spring.version>
        <shiro.version>1.2.3</shiro.version>
        <spring.security.version>3.2.3.RELEASE</spring.security.version>
        <resteasy.version>3.0.7.Final</resteasy.version>
        <atomikos.version>4.0.2</atomikos.version>
        <undertow.version>1.0.1.Final</undertow.version>
        <xnio.version>3.2.0.Final</xnio.version>
        <tomcat.embed.version>8.0.11</tomcat.embed.version>
        <skipJacoco>true</skipJacoco>
        <!-- Test 3rd-party dependencies: -->
    </properties>

    <!--*******************************-->
    <!--依赖声明-->
    <!--*******************************-->
    <dependencyManagement>
        <dependencies>
            <!--spring-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>${spring.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--shiro-->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-aspectj</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-core</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-ehcache</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <!--shiro和redis的结合-->
            <dependency>
                <groupId>org.crazycake</groupId>
                <artifactId>shiro-redis</artifactId>
                <version>2.4.2-RELEASE</version>
            </dependency>

            <!--spring security-->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-config</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-core</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-crypto</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>${spring.security.version}</version>
            </dependency>

            <!--spring data-->
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-commons</artifactId>
                <version>1.10.0.RELEASE</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-jpa</artifactId>
                <version>1.8.0.RELEASE</version>
            </dependency>
            
            <!-- spring test -->
            <dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-test</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			
			<dependency>
			    <groupId>spring-websocket</groupId>
			    <artifactId>spring-websocket</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			
			<dependency>
			    <groupId>spring-messaging</groupId>
			    <artifactId>spring-messaging</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			
			<dependency>
	            <groupId>org.springframework</groupId>
	            <artifactId>spring-aspects</artifactId>
	            <version>${spring.version}</version>
	        </dependency>

            <!--atomikos事务类管理器, 多数据源，分布式事务-->
            <dependency>
                <groupId>com.atomikos</groupId>
                <artifactId>transactions</artifactId>
                <version>${atomikos.version}</version>
            </dependency>
            <dependency>
                <groupId>com.atomikos</groupId>
                <artifactId>transactions-api</artifactId>
                <version>${atomikos.version}</version>
            </dependency>
            <dependency>
                <groupId>com.atomikos</groupId>
                <artifactId>transactions-hibernate3</artifactId>
                <version>${atomikos.version}</version>
            </dependency>
            <dependency>
                <groupId>com.atomikos</groupId>
                <artifactId>transactions-jdbc</artifactId>
                <version>${atomikos.version}</version>
            </dependency>
            <dependency>
                <groupId>com.atomikos</groupId>
                <artifactId>transactions-jta</artifactId>
                <version>${atomikos.version}</version>
            </dependency>
            <dependency>
                <groupId>com.atomikos</groupId>
                <artifactId>atomikos-util</artifactId>
                <version>${atomikos.version}</version>
            </dependency>

            <!--生成唯一识别码-->
            <dependency>
                <groupId>com.eaio.uuid</groupId>
                <artifactId>uuid</artifactId>
                <version>3.2</version>
            </dependency>

            <!--resteasy restful web service框架-->
            <!--servlet3 需要tomcat7的支持-->
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>async-http-servlet-3.0</artifactId>
                <version>${resteasy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jackson-provider</artifactId>
                <version>${resteasy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jaxb-provider</artifactId>
                <version>${resteasy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jaxrs</artifactId>
                <version>${resteasy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jdk-http</artifactId>
                <version>${resteasy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-netty</artifactId>
                <version>${resteasy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-undertow</artifactId>
                <version>${resteasy.version}</version>
            </dependency>

            <!--嵌入式设计的web服务器-->
            <dependency>
                <groupId>io.undertow</groupId>
                <artifactId>undertow-core</artifactId>
                <version>${undertow.version}</version>
            </dependency>
            <dependency>
                <groupId>io.undertow</groupId>
                <artifactId>undertow-servlet</artifactId>
                <version>${undertow.version}</version>
            </dependency>

            <!--嵌入式tomcat-->
            <dependency>
                <groupId>org.apache.tomcat.embed</groupId>
                <artifactId>tomcat-embed-core</artifactId>
                <version>${tomcat.embed.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.tomcat.embed</groupId>
                <artifactId>tomcat-embed-logging-juli</artifactId>
                <version>${tomcat.embed.version}</version>
                <scope>provided</scope>
            </dependency>

            <!--dubbo-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>dubbo</artifactId>
                <version>2.8.3</version>
            </dependency>


            <!--http协议的客户端编程工具包-->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>fluent-hc</artifactId>
                <version>4.3.5</version>
            </dependency>

            <!--一个nio框架-->
            <dependency>
                <groupId>org.jboss.xnio</groupId>
                <artifactId>xnio-nio</artifactId>
                <version>${xnio.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.xnio</groupId>
                <artifactId>xnio-api</artifactId>
                <version>${xnio.version}</version>
            </dependency>

            <!--序列化-->
            <!--FastInfoset，最小化XML数据量和使处理XML数据的速度最大化技术-->
            <dependency>
                <groupId>com.sun.xml.fastinfoset</groupId>
                <artifactId>FastInfoset</artifactId>
                <version>1.2.12</version>
            </dependency>
            <!--快速序列化-->
            <dependency>
                <groupId>de.ruedigermoeller</groupId>
                <artifactId>fst</artifactId>
                <version>1.55</version>
            </dependency>
            <!--kryo：java对象序列化框架-->
            <dependency>
                <groupId>com.esotericsoftware.kryo</groupId>
                <artifactId>kryo</artifactId>
                <version>2.24.0</version>
            </dependency>
            <!--kryo-serializers-->
            <dependency>
                <groupId>de.javakaffee</groupId>
                <artifactId>kryo-serializers</artifactId>
                <version>0.26</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.2.4</version>
            </dependency>
            <dependency>
                <groupId>org.json</groupId>
                <artifactId>json</artifactId>
                <version>20160810</version>
            </dependency>

            <!--jsr：java规范提案-->
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>jsr250-api</artifactId>
                <version>1.0</version>
            </dependency>

            <!--code生成类库-->
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib-nodep</artifactId>
                <version>3.2.1</version>
            </dependency>

            <!--commons beanutils工具库-->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>1.9.2</version>
            </dependency>
            <!--commons-fileupload-->
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>1.3.3</version>
            </dependency>
            <!--commons-lang3-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.4</version>
            </dependency>

            <!--依赖注入@inject-->
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>com.springsource.javax.inject</artifactId>
                <version>1.0.0</version>
            </dependency>

            <!--validation验证规范-->
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>1.1.0.Final</version>
            </dependency>

            <!--持久化规范-->
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>javax.persistence</artifactId>
                <version>2.0.0</version>
            </dependency>

            <!--mybatis-->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>1.3.0</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>3.4.4</version>
            </dependency>
            <dependency>
                <groupId>com.github.miemiedev</groupId>
                <artifactId>mybatis-paginator</artifactId>
                <version>1.2.17</version>
            </dependency>

            <!--特殊类的实例化-->
            <dependency>
                <groupId>org.objenesis</groupId>
                <artifactId>objenesis</artifactId>
                <version>2.5</version>
            </dependency>
            
            <!-- 数据库连接c3p0 -->
            <dependency>
			    <groupId>com.mchange</groupId>
			    <artifactId>c3p0</artifactId>
			    <version>0.9.5.2</version>
			</dependency>

            <!--jgraphx：Java Graph Visualization Library-->
            <dependency>
                <groupId>org.tinyjee.jgraphx</groupId>
                <artifactId>jgraphx</artifactId>
                <version>1.10.4.1</version>
            </dependency>

            <!--验证码-->
            <dependency>
                <groupId>com.google.code</groupId>
                <artifactId>kaptcha</artifactId>
                <version>2.3</version>
            </dependency>

            <!--servlet-->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>3.1.0</version>
            </dependency>

            <!--hibernate-->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>5.0.1.Final</version>
            </dependency>

            <!--servlet容器jetty-->
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-webapp</artifactId>
                <version>9.2.10.v20150310</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>9.2.10.v20150310</version>
            </dependency>

            <!--???-->
            <dependency>
                <groupId>org.jboss.spec.javax.annotation</groupId>
                <artifactId>jboss-annotations-api_1.1_spec</artifactId>
                <version>1.0.1.Final</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.spec.javax.annotation</groupId>
                <artifactId>jboss-annotations-api_1.2_spec</artifactId>
                <version>1.0.0.Final</version>
                <scope>provided</scope>
            </dependency>

            <!--日志-->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.10</version>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
            </dependency>
            <dependency>
		      <groupId>org.slf4j</groupId>
		      <artifactId>slf4j-log4j12</artifactId>
		      <version>1.7.10</version>
		    </dependency>
            <!--性能记录：perf4j is to system.currentTimeMillis() as log4j is to System.out.println-->
            <dependency>
                <groupId>org.perf4j</groupId>
                <artifactId>perf4j</artifactId>
                <version>0.9.16</version>
            </dependency>

            <!--children project-->
            <dependency>
                <groupId>com.cffex.wukong</groupId>
                <artifactId>cap-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.cffex.wukong</groupId>
                <artifactId>cap-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.cffex.wukong</groupId>
                <artifactId>cap-web</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.cffex.wukong</groupId>
                <artifactId>cap-remote</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.cffex.wukong</groupId>
                <artifactId>cap-registry</artifactId>
                <version>${project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--*******************************-->
    <!--构建配置-->
    <!--*******************************-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <compilerArgument>-parameters</compilerArgument>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.9</version>
                <executions>
                    <!--准备指向Jacoco运行时Agent的属性，在测试执行之前传递给虚拟机参数-->
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- 设置覆盖率数据文件路径 -->
                            <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                            <!-- 设置属性名称，Maven surefire插件需要引用这个作为命令行参数 -->
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <!--确保在单元测试执行之后生成覆盖率报告 -->
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- 引用覆盖率文件的路径 -->
                            <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                            <!-- 设置覆盖率报告存放路径 -->
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.15</version>
                <configuration>
                    <!-- 设置虚拟机参数 -->
                    <argLine>${surefireArgLine}</argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--*******************************-->
    <!--私有仓库和插件库-->
    <!--*******************************-->
    
    

    <!--*******************************-->
    <!--二方库-->
    <!--*******************************-->
    <distributionManagement>
        <!--快照发布库-->
        <snapshotRepository>
            <id>snapshots</id>
            <name>cffex-tdd-artifactory-snapshots</name>
            <url>http://172.31.198.187:8081/artifactory/libs-snapshot</url>
        </snapshotRepository>
        <!--版本发布库-->
        <repository>
            <id>releases</id>
            <name>cffex-tdd-artifactory-releases</name>
            <url>http://172.31.198.187:8081/artifactory/libs-release</url>
        </repository>
    </distributionManagement>

</project>
